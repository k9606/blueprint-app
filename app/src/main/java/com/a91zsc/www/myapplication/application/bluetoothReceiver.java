package com.a91zsc.www.myapplication.application;import android.bluetooth.BluetoothDevice;import android.bluetooth.BluetoothSocket;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.graphics.Color;import android.os.Handler;import android.os.Message;import android.util.Log;import android.widget.TextView;import android.widget.Toast;import com.a91zsc.www.myapplication.util.printUtils;import com.a91zsc.www.myapplication.view.PrintDataActivity;import java.io.OutputStream;import static com.a91zsc.www.myapplication.string.staticBluetoothData.uuid;/** * Created by yangx on 17.8.27. */public class bluetoothReceiver extends BroadcastReceiver {    Handler handoler=new Handler();    Boolean  isConnection  = false;    printUtils pu  =new printUtils();   public Intent intentBroadcast = null;    public BluetoothDevice devicecontent = null;    private static BluetoothSocket bluetoothSocket = null;    private static OutputStream outputStream = null;    private static final int Show = 1;    private static final int ShowON = 2;    @Override    public void onReceive(Context context, Intent intent) {        String action = intent.getAction();        BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);        if (BluetoothDevice.ACTION_ACL_DISCONNECTED.equals(action)) {            if(PrintDataActivity.BluetoothIntent!=null){                devicecontent = device;                Message msg = new Message();                msg.what = Show;                handler.sendMessage(msg);                handoler.postDelayed(runnable, 5000);            }        }    }    Runnable runnable=new Runnable(){        @Override        public void run() {            if(connect()){                handoler.removeCallbacks(runnable);                pu.outputGet(outputStream);                Message msg = new Message();                msg.what = ShowON;                handler.sendMessage(msg);            }else {                handoler.postDelayed(this, 10000);                Log.e("蓝牙重连","重连失败,再次链接");            }        }    };    public boolean connect() {        new Thread(new Runnable() {            @Override            public void run() {                try {                    bluetoothSocket = devicecontent.createRfcommSocketToServiceRecord(uuid);                    bluetoothSocket.connect();                    outputStream = bluetoothSocket.getOutputStream();                    isConnection = true;                } catch (Exception e) {                    isConnection = false;                }            }        }).start();        return isConnection;    }    Handler handler = new Handler() {        @Override        public void handleMessage(Message msg) {            super.handleMessage(msg);            switch (msg.what) {                case Show:                    TextView view = PrintDataActivity.connectState;                    view.setText("蓝牙连接异常,正在尝试重连!");                    view.setTextColor(Color.parseColor("#FF4500"));                    break;                case ShowON:                    TextView viewo = PrintDataActivity.connectState;                    String namebluet =  PrintDataActivity.name;                    viewo.setText(namebluet+"连接成功");                    viewo.setTextColor(Color.parseColor("#FFFFFF"));                default:                    break;            }        }    };}