package com.a91zsc.www.myapplication.util;import android.app.Activity;import android.app.ProgressDialog;import android.bluetooth.BluetoothAdapter;import android.bluetooth.BluetoothDevice;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.util.Log;import android.widget.Toast;import com.a91zsc.www.myapplication.R;import com.a91zsc.www.myapplication.view.BluetoothActivity;import com.a91zsc.www.myapplication.view.LoginActivity;import net.sf.json.JSONObject;import java.io.BufferedReader;import java.io.BufferedWriter;import java.io.ByteArrayOutputStream;import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.io.IOException;import java.io.InputStreamReader;import java.io.OutputStreamWriter;import java.util.ArrayList;import java.util.List;import java.util.Set;import okhttp3.FormBody;import okhttp3.OkHttpClient;import okhttp3.Request;import okhttp3.RequestBody;import okhttp3.Response;import static android.R.id.content;import static android.content.Context.MODE_PRIVATE;/** * Created by yangx on 17.6.9. */public class toolsFileIO {    public static final String BLUEDRIVE = "blueDriveName";    public static final String MYFILEDATA = "userConfig";    public static final String SETDATA = "USERDATA";    public static final String USER = "user";    public static final String ISDATA = "oo";    SharedPreferences sharedPreferences;    FileOutputStream outputStream;    private Response response = null;    public String responseData = null;    private Context context = null;    private static final String URL = "https://www.91zsc.com/Home/Print/login";    //从SharedPreferences获取BlueDrive数据    public String getBlueTooth(Context context) {        sharedPreferences = context.getSharedPreferences(BLUEDRIVE, MODE_PRIVATE);        String drive = sharedPreferences.getString("blueDrive", "");        return drive;    }    //存入Blue地址在从SharedPreferences获取数据    public void putBlueToothDrive(Context context, String string) {        sharedPreferences = context.getSharedPreferences(BLUEDRIVE, MODE_PRIVATE);        SharedPreferences.Editor editor = sharedPreferences.edit();        editor.putString("blueDrive", string);        editor.apply();    }    //存入答应数量的    public void putSetData(Context context,int data) {        sharedPreferences = context.getSharedPreferences(SETDATA, MODE_PRIVATE);        SharedPreferences.Editor editor = sharedPreferences.edit();        editor.putInt("setData", data);        editor.apply();    }    //取出答应数量的    public int getSetData(Context context){        sharedPreferences = context.getSharedPreferences(SETDATA, MODE_PRIVATE);        int drive = sharedPreferences.getInt("setData",1);        return drive;    }    public void putBlueToothDriveUser(String msg1, String msg2, Context context) {        sharedPreferences = context.getSharedPreferences(BLUEDRIVE, MODE_PRIVATE);        SharedPreferences.Editor editor = sharedPreferences.edit();        editor.putString("acc", msg1);        editor.putString("password", msg2);        editor.apply();    }    public List<String> getUserPassworld(Context context){        this.context = context;        List<String> userData = new ArrayList<String>();        sharedPreferences = context.getSharedPreferences(USER,MODE_PRIVATE);        String account = sharedPreferences.getString("acc","");        String passworld = sharedPreferences.getString("password","");        userData.add(account);        userData.add(passworld);        return userData;    }    public void removeUserPassworld(){        sharedPreferences = context.getSharedPreferences(USER, MODE_PRIVATE);        SharedPreferences.Editor editor = sharedPreferences.edit();        editor.putString("acc", "");        editor.putString("password", "");        editor.apply();    }    public String ishttp(Context context){        final List<String> data = getUserPassworld(context);        new Thread(new Runnable() {            @Override            public void run() {                try {                     OkHttpClient client = new OkHttpClient();                    RequestBody requestBody = new FormBody.Builder()                            .add("account", data.get(0))                            .add("password", data.get(1))                            .build();                    Request request = new Request.Builder()                            .url(URL)                            .post(requestBody)                            .build();                    response = client.newCall(request).execute();                    responseData = response.body().string();                        Message message = new Message();                        message.what = 0;                        message.obj = responseData;                        handler.sendMessage(message);                }catch (Exception e){                    e.printStackTrace();                }            }        }).start();        return responseData;    }    Handler handler = new Handler() {        @Override        public void handleMessage(Message msg) {            super.handleMessage(msg);            String resporst = (String) msg.obj;            messageIsConnect(resporst);        }    };    public void messageIsConnect(String responseData){            if(!responseData.equals(ISDATA)){                Toast.makeText(context,"用户名密码变更，请重新登陆！",Toast.LENGTH_LONG).show();                removeUserPassworld();                Intent intent = new Intent();                intent.setClassName(context,"com.a91zsc.www.myapplication.view.LoginActivity");                context.startActivity(intent);            }    }    public String getBlueToothUser(Context context) {        sharedPreferences = context.getSharedPreferences(BLUEDRIVE, MODE_PRIVATE);        String drive = sharedPreferences.getString("account", "");        return drive;    }    //清除指定的Key的数据    public void removeBlueToothDriveDAta(String string) {        SharedPreferences.Editor editor = sharedPreferences.edit();        editor.remove("blueDrive");        editor.commit();    }    /**     * 内部储存     * 存数据的方法     */    public void putRamFile(String ususer, String passwrold, Context context) {        try {            outputStream = context.openFileOutput(MYFILEDATA, Context.MODE_PRIVATE);            outputStream.write(ususer.getBytes());            outputStream.write(passwrold.getBytes());            outputStream.close();        } catch (Exception e) {            e.printStackTrace();        }    }    /**     * 内部储存     * 取数据的方法     *///    public String getRamFileData(Context context) {//        try {//            FileInputStream inStream = context.openFileInput(MYFILEDATA);//            ByteArrayOutputStream stream = new ByteArrayOutputStream();//            byte[] buffer = new byte[1024];//            int length = -1;//            while ((length = inStream.read(buffer)) != -1) {//                stream.write(buffer, 0, length);//            }//            stream.close();//            inStream.close();//            text.setText(stream.toString());//            Toast.makeText(MyActivity.this, "Loaded", Toast.LENGTH_LONG).show();//        } catch (FileNotFoundException e) {//            e.printStackTrace();//        } catch (IOException e) {//            return  "";//        }////    }}